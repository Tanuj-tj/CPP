#include <iostream>

using namespace std;

// Create a head node pointing to NULL
class node{
  public:
  
  int data;
  node* next;
  
  node(int val){
      data = val;
      next = NULL;
  }
    
};

// Insert a new node at the end of a LL
void insertAtTail(node* &head,int val){
    node* n = new node(val);
    if(head==NULL){
        head=n;
        return;
    }
    node* temp = head;
    while(temp->next!=NULL){
        temp=temp->next;
    }
    temp->next = n;
    
}

// Delete a node from the begining of the LL
void deleteAtHead(node* &head){
    node* todelete = head;
    head = head->next;
    delete todelete;
}

// Delete a node from the ith pos of a LL
void deletion(node* &head,int val){
    if(head==NULL){
        return;
    }
    if(head->next==NULL){
        deleteAtHead(head);
        return;
    }
    node* temp = head;
    while(temp->next->data!=val){
        temp = temp->next;
        
    }
    node* todelete = temp->next;
    temp->next = temp->next->next;
    delete todelete;
}

//Reverse an LL using Iterative Method
node* reverseIterative(node* &head){
    node* prev = NULL;
    node* curr = head;
    node* nextptr;
    
    while(curr!=NULL){
        nextptr = curr->next;
        curr->next = prev;
        prev = curr;
        curr = nextptr;
    }
    return prev;
}

//Reverse an LL using Recursive Method
node* reverseRecursive(node* &head){
    if(head==NULL||head->next==NULL){
        return head;
    }
    node* newhead = reverseRecursive(head->next);
    head->next->next=head;
    head->next=NULL;
    return newhead;
}

// Print the given LL
void display(node* &head){
    node* temp = head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp = temp->next;
    }
    cout<<"NULL"<<endl;
}

int main()
{
  node* head = NULL;
  
  insertAtTail(head,1);
  insertAtTail(head,2);
  insertAtTail(head,3);
  insertAtTail(head,4);
  insertAtTail(head,5);
  insertAtTail(head,6);
  insertAtTail(head,7);
  insertAtTail(head,8);
  display(head);
  deleteAtHead(head);
  display(head);
  deletion(head,4);
  display(head);
//   cout<<"Reverse an LL using Iterative Method: "<<endl;
//   node* newhead = reverseIterative(head);
//   display(newhead);
  cout<<"Reverse an LL using Recursive Method: "<<endl;
  node* newhead1 = reverseIterative(head);
  display(newhead1);
  
   return 0;
}